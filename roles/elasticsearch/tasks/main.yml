---
- name: Prerequisites
  import_tasks: install_jdk.yml
  tags: install

# tasks file for elasticsearch
- name: Create directory
  file:
    path: "{{item}}"
    mode: 0750
    state: directory
    owner: "{{elk_app_user}}"
    group: "{{elk_group}}"
  become: yes
  with_items:
    - "{{elk_app_dir}}"
  tags: install

- name: Elasticsearch gz package check
  stat:
    path: "{{elk_app_dir}}/elasticsearch-{{elk_version}}-linux-x86_64.tar.gz"
  register: elasticsearch_gz_file
  tags: install

- name: Download elasticsearch binary
  get_url:
    url: "{{elasticsearch_url}}"
    dest: "{{elk_app_dir}}"
    mode: 0750
    owner: "{{elk_app_user}}"
    group: "{{elk_group}}"
  when: elasticsearch_gz_file.stat.exists == false
  become: yes
  tags: install

- name: Unarchive elasticsearch
  unarchive:
    src: "{{elk_app_dir}}/elasticsearch-{{elk_version}}-linux-x86_64.tar.gz"
    dest: "{{elk_app_dir}}"
    creates: "{{elk_app_dir}}/elasticsearch-{{elk_version}}"
    remote_src: yes
    mode: 0750
    owner: "{{elk_app_user}}"
    group: "{{elk_group}}"
  become: yes
  tags: install

- name: Create a symbolic link
  file:
    src: "{{elk_app_dir}}/elasticsearch-{{elk_version}}"
    dest: "{{elk_app_dir}}/elasticsearch"
    state: link
    mode: 0750
    owner: "{{elk_app_user}}"
    group: "{{elk_group}}"
  become: yes
  tags: install

- name: Copy elasticsearch config template
  template:
    src: "{{item.src_name}}"
    dest: "{{elasticsearch_config_dir}}/{{item.dest_name}}"
    owner: "{{elk_app_user}}"
    group: "{{elk_group}}"
  become: yes
  with_items:
    - {src_name: "elasticsearch.yml.j2", dest_name: "elasticsearch.yml"}
  loop_control:
    label: "{{item.dest_name}}"
  tags: install

- name: Start elasticsearch
  shell: "{{elk_app_dir}}/elasticsearch/bin/elasticsearch >/dev/null 2>&1 &"